// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel=address[0..2], a=ramZero, b=ramOne, c=ramTwo, d=ramThree, e=ramFour, f=ramFive, g=ramSix, h=ramSeven);

    RAM512(in=in, load=ramZero, address=address[3..11], out=ramZeroOut);
    RAM512(in=in, load=ramOne, address=address[3..11], out=ramOneOut);
    RAM512(in=in, load=ramTwo, address=address[3..11], out=ramTwoOut);
    RAM512(in=in, load=ramThree, address=address[3..11], out=ramThreeOut);
    RAM512(in=in, load=ramFour, address=address[3..11], out=ramFourOut);
    RAM512(in=in, load=ramFive, address=address[3..11], out=ramFiveOut);
    RAM512(in=in, load=ramSix, address=address[3..11], out=ramSixOut);
    RAM512(in=in, load=ramSeven, address=address[3..11], out=ramSevenOut);

    Mux8Way16(a=ramZeroOut, b=ramOneOut, c=ramTwoOut, d=ramThreeOut, e=ramFourOut, f=ramFiveOut, g=ramSixOut, h=ramSevenOut, sel=address[0..2], out=out);
}